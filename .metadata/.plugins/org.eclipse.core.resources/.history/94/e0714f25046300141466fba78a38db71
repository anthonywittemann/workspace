import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.Date;


public class Server extends Thread {
    private int c = 0;
    private Listener[] connections = new Listener[2];

    public void run() {
        ServerSocket serverSocket = null;
        Socket socket = null;

        try {
            serverSocket = new ServerSocket(4444);
            while (c < 2) {
                socket = serverSocket.accept();
                connections[c] = new Listener(socket, c);
                connections[c].start();
                c++;
            }
            for (Listener i : connections) {
                i.out.println(-1);
                i.out.flush();
            }
        } catch (IOException e) {
            System.err.println("Could not listen on port: 4444.");
            System.exit(1);
        }
    }

    Server() {}

    private class Listener extends Thread {
        public PrintWriter out;
        public BufferedReader in;
        public Socket socket;
        public int id;
        Listener(Socket socket, int id) {
            this.socket = socket;
            this.id = id;
            try {
                out = new PrintWriter(socket.getOutputStream(), true);
                out.flush();
                in = new BufferedReader(new InputStreamReader(socket.getInputStream()));
            } catch (Exception e) {
                System.out.println(e.getCause());
            }
        }

        @Override
        public void run() {
            super.run();
            System.out.println("Created listener thread.");
            try {
                while (true) {
                    String msg = in.readLine();
                    System.out.println("Server: " + msg);
                    int d = Integer.parseInt(msg);
                    connections[1 - id].out.println(d);
                    connections[1 - id].out.flush();
                }
            } catch (Exception e) {
                System.out.println(e.getCause());
            }
        }
    }
    
    public static void main (String [] args) {
        Server server = new Server();
        server.start();
        Client c = new Client("FF7 player 1");
        Client d = new Client("FF7 player 2");
        new Thread(c).start();
        new Thread(d).start();
    }
}

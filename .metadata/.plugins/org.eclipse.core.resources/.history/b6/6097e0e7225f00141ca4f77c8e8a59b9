package aw;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;


public class AttackThread extends Thread{
	private Socket s;
	private Lab10Server ls;
	private PrintWriter pw;
	private boolean isSword; //true if attacking with sword, false if with magic
	
	public AttackThread(Socket s, Lab10Server ls){
		this.s = s;
		this.ls = ls;
		this.isSword = true;
		try {
			this.pw = new PrintWriter(s.getOutputStream());
		} catch (IOException ioe) {
			System.out.println("IOE: " + ioe.getMessage());
		}
		
	}
	
	
	public void run(){
		// a client has connected to our server
		try {
			BufferedReader br = new BufferedReader(new InputStreamReader(s.getInputStream()));
			String line = br.readLine();
			while(true){
				ls.sendMessage(line, this);
				line = br.readLine(); //blocking line (waits until it receives input, makes sure there's no infinite loop, stackoverflow
			}

		} catch (IOException ioe) {
			System.out.println("IOE: " + ioe.getMessage());
			//thrown when client disconnected 
			//TODO call method in chatserver class to remove instance of that thread from vector
		}
	}
	
	public void attack(boolean isSword){
		
	}
	
	
}

package aw;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import java.awt.event.ComponentListener;
import java.io.File;

import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

public class MainFrame extends JFrame{
	
	private JFileChooser fileChooser;
	private File xmlFile;
	private Object[][] rowData;
	private static final Object[] columnNames  = {"Car #", "X", "Y"};
	private JPanel drawingPanel;
	private JTable carLocationTable;
	private DefaultTableModel carTableModel;
	private JPanel carTablePanel;
	private JPanel mainPanel;
	private int xGridCenter;
	private int yGridCenter;
	private int topLeftX;
	private int topLeftY;
	
	//TODO Part 4 - draw centered 9x9 grid each box 50px x 50px
	
	public MainFrame(){
		//set up the window and the drawing panel
		setSize(800,600);
		this.setMinimumSize(new Dimension(800, 600));//TODO play around with the minimum size
		setTitle("Roadway Simulator");
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		mainPanel = new JPanel();
		mainPanel.setLayout(new GridBagLayout()); //use GridLayout to separate Table
		drawingPanel = new DrawingPanel();
		drawingPanel.setBackground(Color.LIGHT_GRAY);
		drawingPanel.setPreferredSize(new Dimension(mainPanel.getWidth() - 200, mainPanel.getHeight()));
		
		xGridCenter = drawingPanel.getWidth()/2;
		yGridCenter = drawingPanel.getHeight()/2;
		topLeftX = xGridCenter - 225;
		topLeftY = yGridCenter - 225;
		
		
		/*** MENUBAR & OPENING XML FILE ****** MENUBAR & OPENING XML FILE ****** MENUBAR & OPENING XML FILE ****** MENUBAR & OPENING XML FILE ***/
		JMenuBar menuBar = new JMenuBar();
		JMenuItem openFileItem = new JMenuItem("Open File...");

		openFileItem.addActionListener(new ActionListener(){
			@Override
			public void actionPerformed(ActionEvent ae) {
				fileChooser = new JFileChooser();
				fileChooser.setVisible(true);
				FileNameExtensionFilter xmlFilter = new FileNameExtensionFilter("XML files", "xml");
				fileChooser.setFileFilter(xmlFilter);
				int returnVal = fileChooser.showOpenDialog(MainFrame.this);
				if(returnVal == JFileChooser.APPROVE_OPTION) {
					xmlFile = fileChooser.getSelectedFile();
					System.out.println("You chose to open this file: " + xmlFile.getName());
				}
				System.out.println("DEBUG: Open file clicked");

			}

		});
		
		
		
		
		/*** TABLE ON RIGHT ****** TABLE ON RIGHT ****** TABLE ON RIGHT ****** TABLE ON RIGHT ****** TABLE ON RIGHT ****** TABLE ON RIGHT ***/
		rowData = new Object[1][3];
		rowData[0][0] = "Car #"; rowData[0][1] = "X"; rowData[0][2] = "Y";
		
		carTableModel = new DefaultTableModel(rowData, columnNames){ //allows for double clicking
			@Override
		    public boolean isCellEditable(int row, int column) {
		       //all cells false
		       return false;
		    }
		};
		
		carLocationTable = new JTable(carTableModel);
		carLocationTable.setPreferredSize(new Dimension(200, mainPanel.getHeight()));
		carTablePanel = new JPanel();
		carTablePanel.setPreferredSize(new Dimension(200, mainPanel.getHeight()));
		
		
		
		
		/****** ADD COMPONENTS TO JPANELS AND GUI ****** ADD COMPONENTS TO JPANELS AND GUI ****** ADD COMPONENTS TO JPANELS AND GUI ******/
		menuBar.add(openFileItem);
		setJMenuBar(menuBar);
		
		GridBagConstraints gbc = new GridBagConstraints();
		
		gbc.gridx = 0;
		gbc.gridy = 0;
		gbc.fill = GridBagConstraints.BOTH;
		gbc.anchor = GridBagConstraints.EAST;
		Dimension drawingPanelDimensions = drawingPanel.getPreferredSize();
		drawingPanel.setBounds(0, 0, drawingPanelDimensions.width, drawingPanelDimensions.height);
		mainPanel.add(drawingPanel, gbc);
		
		gbc.gridx = 1;
		gbc.gridy = 0;
		gbc.anchor = GridBagConstraints.WEST;
		gbc.fill = GridBagConstraints.BOTH;
		carTablePanel.add(carLocationTable);
		mainPanel.add(carTablePanel, gbc);
		
		
		
		
		/****** RESIZE COMPONENTS WHEN WINDOW RESIZED ****** RESIZE COMPONENTS WHEN WINDOW RESIZED ****** RESIZE COMPONENTS WHEN WINDOW RESIZED ******/
		mainPanel.addComponentListener(new ComponentAdapter(){
			public void componentResized(ComponentEvent ce){
				carLocationTable.setPreferredSize(new Dimension(200,mainPanel.getHeight()));
				carTablePanel.setPreferredSize(new Dimension(200, mainPanel.getHeight()));
				drawingPanel.setPreferredSize(new Dimension(mainPanel.getWidth() - 200, mainPanel.getHeight()));
				xGridCenter = drawingPanel.getWidth()/2;
				yGridCenter = drawingPanel.getHeight()/2;
				//TODO update center point here
			}
		});
		
		add(mainPanel);
		
		setVisible(true);
	}
	
	class DrawingPanel extends JPanel{
		public void paintComponent(Graphics g){
			super.paintComponent(g);
			drawGrid(g);
		}
		
		public void drawGrid(Graphics g){
			g.drawLine(xGridCenter - 225, yGridCenter - 225, xGridCenter + 225, yGridCenter - 225); //top horizontal line
			g.drawLine(xGridCenter - 225, yGridCenter - 175, xGridCenter + 225, yGridCenter - 175); //top-1 horizontal line
			g.drawLine(xGridCenter - 225, yGridCenter - 125, xGridCenter + 225, yGridCenter - 125); //top-2 horizontal line
			g.drawLine(xGridCenter - 225, yGridCenter - 75, xGridCenter + 225, yGridCenter - 75); //top-3 horizontal line
			g.drawLine(xGridCenter - 225, yGridCenter - 25, xGridCenter + 225, yGridCenter - 25); //top-4 horizontal line
			
			g.drawLine(xGridCenter - 225, yGridCenter + 175, xGridCenter + 225, yGridCenter + 175); //top-1 horizontal line
			g.drawLine(xGridCenter - 225, yGridCenter + 125, xGridCenter + 225, yGridCenter + 125); //top-2 horizontal line
			g.drawLine(xGridCenter - 225, yGridCenter + 75, xGridCenter + 225, yGridCenter + 75); //top-3 horizontal line
			g.drawLine(xGridCenter - 225, yGridCenter + 25, xGridCenter + 225, yGridCenter + 25); //top-4 horizontal line
			
			//TODO finish drawing lines for grid, need points for center, 4 corners of grid 
		}
	}
	
	
	
	public static void main(String[] args) {
		new MainFrame();

	}

}
